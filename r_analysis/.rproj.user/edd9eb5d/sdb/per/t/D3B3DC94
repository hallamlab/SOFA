{
    "contents" : "# Experiment with ggbio\n\n# install from bioconductor\nsource(\"http://bioconductor.org/biocLite.R\")\nbiocLite(\"ggbio\")\ninstall.packages(\"ggbio\")\n\nlibrary(ggbio)\n\n# 1 ideogram and track\np.ideo <- Ideogram(genome = \"hg19\")\np.ideo\n\nlibrary(GenomicRanges)\np.ideo + xlim(GRanges(\"chr2\", IRanges(1e8, 1e8+10000000)))\n\n# 2 \n\nbiocLite(\"Homo.sapiens\")\nlibrary(Homo.sapiens)\ndata(\"CRC\", package = \"biovizBase\")\nhead(hg19sub)\nautoplot(hg19sub, layout = \"circle\", fill = \"gray70\")\n\n# circular plot with ordinate\np <- ggbio() + circle(hg19sub, geom = \"ideo\", fill = \"gray70\") + circle(hg19sub, geom = \"scale\", size = 2) +\n  circle(hg19sub, geom = \"text\", aes(label = seqnames), vjust = 0, size = 3)\np\n\n# circular wider radius\np <- ggbio(trackWidth = 10, buffer = 0, radius = 10) \np <- p + circle(hg19sub, geom = \"ideo\", fill = \"grey70\")\np <- p + circle(hg19sub, geom = \"scale\", size = 2) \np <- p + circle(hg19sub, geom = \"text\", aes(label = seqnames), vjust = 0, size = 3)\np\n\nhead(mut.gr)\n\np <- ggbio() + circle(mut.gr, geom = \"rect\", color = \"steelblue\") +\n  circle(hg19sub, geom = \"ideo\", fill = \"gray70\") +\n  circle(hg19sub, geom = \"scale\", size = 2) + circle(hg19sub, geom = \"text\", aes(label = seqnames), vjust = 0, size = 3)\np\n\n# add some links\nhead(crc.gr)\ngr.crc1 <- crc.gr[values(crc.gr)$individual == \"CRC-1\"]\ngr.crc1\n\np <- p + circle(gr.crc1, geom = \"point\", aes(y = score, size = tumreads), color = \"red\", grid = TRUE, radius = 30) + scale_size(range = c(1, 2.5))\np\n\n\n#\np <- p + circle(gr.crc1, geom = \"link\", linked.to = \"to.gr\", aes(color = rearrangements), radius = 23)\np\n\n# do the whole thing\np <- ggbio() + circle(gr.crc1, geom = \"link\", linked.to = \"to.gr\", aes(color = rearrangements)) +\n  circle(gr.crc1, geom = \"point\", aes(y = score, size = tumreads), color = \"red\", grid = TRUE) + scale_size(range = c(1, 2.5)) +\n  circle(mut.gr, geom = \"rect\", color = \"steelblue\") + circle(hg19sub, geom = \"ideo\", fill = \"gray70\") + circle(hg19sub, geom = \"scale\", size = 2) +\n  circle(hg19sub, geom = \"text\", aes(label = seqnames), vjust = 0, size = 3)\np\n\nsnp <- read.table(system.file(\"extdata\", \"plink.assoc.sub.txt\", package = \"biovizBase\"), header = TRUE)\nrequire(biovizBase)\ngr.snp <- transformDfToGr(snp, seqnames = \"CHR\", start = \"BP\", width = 1)\nrequire(GenomicRanges)\ngr.snp <- keepSeqlevels(gr.snp, as.character(1:22))\nseqlengths(gr.snp)\ndata(ideoCyto, package = \"biovizBase\")\nseqlengths(gr.snp) <- as.numeric(seqlengths(ideoCyto$hg18)[1:22])\ngr.snp <- gr.snp[!is.na(gr.snp$P)]\nvalues(gr.snp)$pvalue <- -log10(values(gr.snp)$P)\nhead(gr.snp)\nautoplot(gr.snp, geom = \"point\", coord = \"genome\", aes(y = pvalue))\nplotGrandLinear(gr.snp, aes(y = pvalue), color = c(\"#7fc97f\", \"#fdc086\"))\n\nplotGrandLinear(gr.snp, aes(y = pvalue), color = c(\"#7fc97f\", \"#fdc086\"), cutoff = 3, cutoff.color = \"blue\", cutoff.size = 0.2)\n\nplotGrandLinear(gr.snp, aes(y = pvalue, color = OR), spaceline = TRUE, legend = TRUE)\n\n\n\n# Stacked karyogram\ndata(ideoCyto, package = \"biovizBase\")\nautoplot(seqinfo(ideoCyto$hg19), layout = \"karyogram\")\nbiovizBase::isIdeogram(ideoCyto$hg19)\nautoplot(ideoCyto$hg19, layout = \"karyogram\", cytoband = TRUE)\n\n\n# add data to karyogram\ndata(darned_hg19_subset500, package = \"biovizBase\") \ndn <- darned_hg19_subset500 \nlibrary(GenomicRanges) \nseqlengths(dn)\n## add seqlengths ## we have seqlegnths information in another data set \nseqlengths(dn) <- seqlengths(ideoCyto$hg19)[names(seqlengths(dn))] \n## then we change order \ndn <- keepSeqlevels(dn, paste0(\"chr\", c(1:22, \"X\"))) \nseqlengths(dn) \nautoplot(dn, layout = \"karyogram\")\n\n## since default is geom rectangle, even though it's looks like segment \n## we still use both fill/color to map colors \nautoplot(dn, layout = \"karyogram\", aes(color = exReg, fill = exReg))\n\n## since default is geom rectangle, even though it's looks like segment \n## we still use both fill/color to map colors \nautoplot(dn, layout = \"karyogram\", aes(color = exReg, fill = exReg), alpha = 0.5) +\nscale_color_discrete(na.value = \"brown\")\n\n\n\n## 5\n\n# Link ranges to your data\nlibrary(TxDb.Hsapiens.UCSC.hg19.knownGene) \nlibrary(ggbio) \ndata(genesymbol, package = \"biovizBase\") \ntxdb <- TxDb.Hsapiens.UCSC.hg19.knownGene \nmodel <- exonsBy(txdb, by = \"tx\")\nmodel17 <- subsetByOverlaps(model, genesymbol[\"RBM17\"]) \nexons <- exons(txdb) \nexon17 <- subsetByOverlaps(exons, genesymbol[\"RBM17\"]) \n## reduce to make sure there is no overlap\n## just for example\nexon.new <- reduce(exon17) \n## suppose \nvalues(exon.new)$sample1 <- rnorm(length(exon.new), 10, 3) \nvalues(exon.new)$sample2 <- rnorm(length(exon.new), 10, 10) \nvalues(exon.new)$score <- rnorm(length(exon.new)) \nvalues(exon.new)$significant <- sample(c(TRUE,FALSE), size = length(exon.new),replace = TRUE) \n## data ready \nexon.new\n\np17 <- autoplot(txdb, genesymbol[\"RBM17\"])\nplotRangesLinkedToData(exon.new, stat.y = c(\"sample1\", \"sample2\"), annotation = list(p17))\n\n\n## Themes\np\np + theme_alignment() \np + theme_clear() \np + theme_null()\n\n\n# theme alignment\nlibrary(GenomicRanges) \nset.seed(1) \nN <- 100 \ngr <- GRanges(seqnames = sample(c(\"chr1\", \"chr2\", \"chr3\"), \n                                size = N, replace = TRUE), \n              IRanges(start = sample(1:300, size = N, replace = TRUE),\n              width = sample(70:75, size = N,replace = TRUE)), \n              strand = sample(c(\"+\", \"-\"), size = N, replace = TRUE), \n              value = rnorm(N, 10, 3), \n              score = rnorm(N, 100, 30), \n              sample = sample(c(\"Normal\", \"Tumor\"),\n                              size = N, replace = TRUE),\n              pair = sample(letters, size = N, replace = TRUE))\n\nseqlengths(gr) <- c(400, 1000, 500)\nautoplot(gr)\nautoplot(gr) + theme_tracks_sunset()\n\nsetwd(\"~/Dropbox/Consulting/Rick/recruitment_plot\")\ndf <- read.table(\"gr_frame.txt\", sep=\"\\t\", header=T)\ngr <- makeGRangesFromDataFrame(df, keep.extra.columns=T)\nautoplot(gr)\n\np <- ggbio() + circle(gr, geom = \"ideo\", fill = \"gray70\")\n\ndf2 <- read.table(\"gr_frame2.txt\", sep=\"\\t\", header=T)\ngr2 <- makeGRangesFromDataFrame(df2, keep.extra.columns=T)\nseqlengths(gr2) <- unique(df2$contig_l)\n\np <- ggbio() + circle(gr2, geom = \"ideo\", fill = \"gray70\")\np\n\nsetwd(\"/Users/nielsh/Dropbox/manuscripts/SOFA/r_analysis/\")\necoli_df <- read.table(\"NC_000913.3_ggbio_gr.txt\", sep=\"\\t\", header=T, quote = \"\")\necoli_gr <- makeGRangesFromDataFrame(ecoli_df, keep.extra.columns=T)\nseqlengths(ecoli_gr) <- 4640542\np <- ggbio() + circle(ecoli_gr, geom = \"rect\", color = \"steelblue\") +circle(ecoli_gr, geom = \"ideo\", fill = \"gray70\") + circle(ecoli_gr, geom = \"scale\", size = 2)\nquartz()\np\n\n",
    "created" : 1427563616622.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "669554300",
    "id" : "D3B3DC94",
    "lastKnownWriteTime" : 1427578752,
    "path" : "~/Dropbox/manuscripts/SOFA/r_analysis/scratch/ggbio_experiment.R",
    "project_path" : "scratch/ggbio_experiment.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}